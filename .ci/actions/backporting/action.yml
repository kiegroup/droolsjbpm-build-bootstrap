name: 'Pull Request Backporting'
description: 'Creates a backporting pull request'

inputs:
  target-branch:
    description: "The branch where the cherry-pick must be applied"
    required: true
  title:
    description: "The cherry-pick pull request title"
    default: "${{ github.event.pull_request.title }}"
    required: false
  body:
    description: "The cherry-pick pull request body"
    default: "${{ github.event.pull_request.body }}"
    required: false
  original-pr-url:
    description: "Original pull request url"
    default: "${{ github.event.pull_request.html_url }}"
    required: false
  original-pr-branch:
    description: "Original pull request branch name"
    default: "${{ github.event.pull_request.head.ref }}"
    required: false
  author:
    description: "Author of the original pull request"
    default: "${{ github.event.pull_request.user.login }}"
    required: false
  include-merge-as-reviewer:
    description: "Whether include or not who merged the pull request as reviewer of the backported one"
    default: "true"
    required: false
  include-requested-reviewers:
    description: "Whether include or not original requested reviewers"
    default: "true"
    required: false
  custom-reviewers:
    description: "Comma separated list of additional reviewers to be added in backported pull request"
    required: false
  additional-reviewers:
    description: "Additional backported pull request reviewers, default is toJSON(github.event.pull_request.requested_reviewers)"
    required: false
    deprecationMessage: "[IGNORED] The previous default is managed by `include-requested-reviewers`. If you want to add more custom reviewers use `custom-reviewers` input instead"
  excluded-reviewers:
    description: "Comma separated list of reviewers to be excluded, e.g., dependabot[bot]"
    default: dependabot[bot]
    required: false

runs: 
  using: 'composite'
  steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Setup default values
      shell: bash
      env:
        REQUESTED_REVIEWERS: ${{ toJSON(github.event.pull_request.requested_reviewers) }}
        MERGED_BY: ${{ github.event.pull_request.merged_by.login }}
        CUSTOM_REVIEWERS: ""
      run: |
        # -- Additional Reviewers --
        # trick to save multiline string as env variable
        echo "REQUESTED_REVIEWERS<<EOF" >> $GITHUB_ENV
        input_include_requested_revs=${{ inputs.include-requested-reviewers }}
        [[ "$input_include_requested_revs" == "true" ]] && echo "$REQUESTED_REVIEWERS" >> $GITHUB_ENV || echo "[]" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

        # -- Custom Reviewers --
        input_custom_revs=${{ inputs.custom-reviewers }}
        [[ ! -z "$input_custom_revs" ]] \
          && echo "CUSTOM_REVIEWERS=$(echo "[\"${input_custom_revs/,/\",\"}\"]")" >> $GITHUB_ENV \
          || echo "CUSTOM_REVIEWERS=[]" >> $GITHUB_ENV

        # -- Merged By Reviewer --
        input_include_merge=${{ inputs.include-merge-as-reviewer }}
        [[ "$input_include_merge" == "true" ]] && echo "MERGED_BY=$MERGED_BY" >> $GITHUB_ENV || echo "MERGED_BY=" >> $GITHUB_ENV

        # -- Excluded Reviewers --
        excluded_revs=${{ inputs.excluded-reviewers }}
        [[ ! -z "$excluded_revs" ]] \
          && echo "EXCLUDED_REVIEWERS=$(echo "[\"${excluded_revs/,/\",\"}\"]")" >> $GITHUB_ENV \
          || echo "EXCLUDED_REVIEWERS=[]" >> $GITHUB_ENV
    - name: Prepare reviewers
      id: prepare-reviewers
      shell: bash
      run: |
        env

        # starts from request reviewers or empty array
        reviewers="$(echo ${REQUESTED_REVIEWERS:-[]} | jq -c 'map(.login)' | jq -cr '[. |= . + ["${{ inputs.author }}", "${{ env.MERGED_BY }}"] | .[] | select(length > 0)] | unique')"

        # add custom reviewers, if any
        reviewers="$(jq -c --argjson arr1 "$reviewers" --argjson arr2 "${CUSTOM_REVIEWERS:-[]}" -n '$arr1 + $arr2 | unique')"

        # filter out not acceptable reviewers
        reviewers="$(echo $reviewers | jq -cr --argjson exclude "${EXCLUDED_REVIEWERS:-[]}" '. | map(select(. as $current | ($exclude | index($current)) | not)) | unique | join(",")')"

        echo "reviewers = ${reviewers}"
        echo "BACKPORT_REVIEWERS=${reviewers}" >> $GITHUB_ENV
    - name: Perform cherry pick
      id: cherry-pick
      uses: carloscastrojumo/github-cherry-pick-action@v1.0.9
      with:
        branch: "${{ inputs.target-branch }}"
        title: "[${{ inputs.target-branch }}] ${{ inputs.title }}"
        body: "**Backport:** ${{ inputs.original-pr-url }}\r\n\r\n${{ inputs.body }}"
        labels: |
          cherry-pick :cherries:
        inherit_labels: false
        cherry-pick-branch: "${{ inputs.target-branch }}_${{ inputs.original-pr-branch }}"
        reviewers: ${{ env.BACKPORT_REVIEWERS }}
